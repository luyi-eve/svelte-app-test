{"version":3,"file":"C_i4H-yG.js","sources":["../../../../../../node_modules/mode-watcher/dist/without-transition.js","../../../../../../node_modules/mode-watcher/dist/utils.js","../../../../../../node_modules/mode-watcher/dist/stores.js"],"sourcesContent":["// Original Source: https://reemus.dev/article/disable-css-transition-color-scheme-change#heading-ultimate-solution-for-changing-color-scheme-without-transitions\nlet timeoutAction;\nlet timeoutEnable;\n// Perform a task without any css transitions\n// eslint-disable-next-line ts/no-explicit-any\nexport function withoutTransition(action) {\n    if (typeof document === \"undefined\")\n        return;\n    // Clear fallback timeouts\n    clearTimeout(timeoutAction);\n    clearTimeout(timeoutEnable);\n    // Create style element to disable transitions\n    const style = document.createElement(\"style\");\n    const css = document.createTextNode(`* {\n     -webkit-transition: none !important;\n     -moz-transition: none !important;\n     -o-transition: none !important;\n     -ms-transition: none !important;\n     transition: none !important;\n  }`);\n    style.appendChild(css);\n    // Functions to insert and remove style element\n    const disable = () => document.head.appendChild(style);\n    const enable = () => document.head.removeChild(style);\n    // Best method, getComputedStyle forces browser to repaint\n    if (typeof window.getComputedStyle !== \"undefined\") {\n        disable();\n        action();\n        // eslint-disable-next-line ts/no-unused-expressions -- this is a side effect\n        window.getComputedStyle(style).opacity;\n        enable();\n        return;\n    }\n    // Better method, requestAnimationFrame processes function before next repaint\n    if (typeof window.requestAnimationFrame !== \"undefined\") {\n        disable();\n        action();\n        window.requestAnimationFrame(enable);\n        return;\n    }\n    // Fallback\n    disable();\n    timeoutAction = window.setTimeout(() => {\n        action();\n        timeoutEnable = window.setTimeout(enable, 120);\n    }, 120);\n}\n","/**\n * Santizes an array of classnames by removing any empty strings.\n */\nexport function sanitizeClassNames(classNames) {\n    return classNames.filter((className) => className.length > 0);\n}\n","import { derived, get, writable } from \"svelte/store\";\nimport { withoutTransition } from \"./without-transition.js\";\nimport { sanitizeClassNames } from \"./utils.js\";\n// saves having to branch for server vs client\nconst noopStorage = {\n    getItem: (_key) => null,\n    setItem: (_key, _value) => { },\n};\n// whether we are running on server vs client\nconst isBrowser = typeof document !== \"undefined\";\n/**  the modes that are supported, used for validation & type derivation */\nexport const modes = [\"dark\", \"light\", \"system\"];\n/**\n * The key used to store the `mode` in localStorage.\n */\nexport const modeStorageKey = writable(\"mode-watcher-mode\");\n/**\n * The key used to store the `theme` in localStorage.\n */\nexport const themeStorageKey = writable(\"mode-watcher-theme\");\n/**\n * Writable store that represents the user's preferred mode (`\"dark\"`, `\"light\"` or `\"system\"`)\n */\nexport const userPrefersMode = createUserPrefersMode();\n/**\n * Readable store that represents the system's preferred mode (`\"dark\"`, `\"light\"` or `undefined`)\n */\nexport const systemPrefersMode = createSystemMode();\n/**\n * Theme colors for light and dark modes.\n */\nexport const themeColors = writable(undefined);\n/**\n * A custom theme to apply and persist to the root `html` element.\n */\nexport const theme = createCustomTheme();\n/**\n * Whether to disable transitions when changing the mode.\n */\nexport const disableTransitions = writable(true);\n/**\n * The classnames to add to the root `html` element when the mode is dark.\n */\nexport const darkClassNames = writable([]);\n/**\n * The classnames to add to the root `html` element when the mode is light.\n */\nexport const lightClassNames = writable([]);\n/**\n * Derived store that represents the current mode (`\"dark\"`, `\"light\"` or `undefined`)\n */\nexport const derivedMode = createDerivedMode();\n/**\n * Derived store that represents the current custom theme\n */\nexport const derivedTheme = createDerivedTheme();\n// derived from: https://github.com/CaptainCodeman/svelte-web-storage\nfunction createUserPrefersMode() {\n    const defaultValue = \"light\";// FORCE LIGHT MODE AS DEFAULT\n    const storage = isBrowser ? localStorage : noopStorage;\n    const initialValue = storage.getItem(getModeStorageKey());\n    let value = isValidMode(initialValue) ? initialValue : defaultValue;\n    function getModeStorageKey() {\n        return get(modeStorageKey);\n    }\n    const { subscribe, set: _set } = writable(value, () => {\n        if (!isBrowser)\n            return;\n        const handler = (e) => {\n            if (e.key !== getModeStorageKey())\n                return;\n            const newValue = e.newValue;\n            if (isValidMode(newValue)) {\n                _set((value = newValue));\n            }\n            else {\n                _set((value = defaultValue));\n            }\n        };\n        addEventListener(\"storage\", handler);\n        return () => removeEventListener(\"storage\", handler);\n    });\n    function set(v) {\n        _set(\"light\"); // FORCE LIGHT MODE NO MATTER WHAT\n        if (typeof window !== \"undefined\") {\n            localStorage.setItem(getModeStorageKey(), \"light\"); // Always save \"light\"\n            document.documentElement.setAttribute(\"data-theme\", \"light\"); // Apply Light Mode\n        }\n    }\n    \n    return {\n        subscribe,\n        set,\n    };\n}\nfunction createCustomTheme() {\n    const storage = isBrowser ? localStorage : noopStorage;\n    const initialValue = storage.getItem(getThemeStorageKey());\n    let value = initialValue === null || initialValue === undefined ? \"\" : initialValue;\n    function getThemeStorageKey() {\n        return get(themeStorageKey);\n    }\n    const { subscribe, set: _set } = writable(value, () => {\n        if (!isBrowser)\n            return;\n        const handler = (e) => {\n            if (e.key !== getThemeStorageKey())\n                return;\n            const newValue = e.newValue;\n            if (newValue === null) {\n                _set((value = \"\"));\n            }\n            else {\n                _set((value = newValue));\n            }\n        };\n        addEventListener(\"storage\", handler);\n        return () => removeEventListener(\"storage\", handler);\n    });\n    function set(v) {\n        _set((value = v));\n        storage.setItem(getThemeStorageKey(), value);\n    }\n    return {\n        subscribe,\n        set,\n    };\n}\nfunction createSystemMode() {\n    const defaultValue = undefined;\n    let track = true;\n    const { subscribe, set } = writable(defaultValue, () => {\n        if (!isBrowser)\n            return;\n        const handler = (e) => {\n            if (!track)\n                return;\n            set(e.matches ? \"light\" : \"dark\");\n        };\n        const mediaQueryState = window.matchMedia(\"(prefers-color-scheme: light)\");\n        mediaQueryState.addEventListener(\"change\", handler);\n        return () => mediaQueryState.removeEventListener(\"change\", handler);\n    });\n    /**\n     * Query system preferences and update the store.\n     */\n    function query() {\n        if (!isBrowser)\n            return;\n        const mediaQueryState = window.matchMedia(\"(prefers-color-scheme: light)\");\n        set(mediaQueryState.matches ? \"light\" : \"dark\");\n    }\n    /**\n     * Enable or disable tracking of system preference changes.\n     */\n    function tracking(active) {\n        track = active;\n    }\n    return {\n        subscribe,\n        query,\n        tracking,\n    };\n}\nfunction createDerivedMode() {\n    const { subscribe } = derived([\n        userPrefersMode,\n        systemPrefersMode,\n        themeColors,\n        disableTransitions,\n        darkClassNames,\n        lightClassNames,\n    ], ([$userPrefersMode, $systemPrefersMode, $themeColors, $disableTransitions, $darkClassNames, $lightClassNames,]) => {\n        if (!isBrowser)\n            return undefined;\n        const derivedMode = $userPrefersMode === \"system\" ? $systemPrefersMode : $userPrefersMode;\n        const sanitizedDarkClassNames = sanitizeClassNames($darkClassNames);\n        const sanitizedLightClassNames = sanitizeClassNames($lightClassNames);\n        function update() {\n            const htmlEl = document.documentElement;\n            const themeColorEl = document.querySelector('meta[name=\"theme-color\"]');\n            if (derivedMode === \"light\") {\n                if (sanitizedDarkClassNames.length)\n                    htmlEl.classList.remove(...sanitizedDarkClassNames);\n                if (sanitizedLightClassNames.length)\n                    htmlEl.classList.add(...sanitizedLightClassNames);\n                htmlEl.style.colorScheme = \"light\";\n                if (themeColorEl && $themeColors) {\n                    themeColorEl.setAttribute(\"content\", $themeColors.light);\n                }\n            }\n            else {\n                if (sanitizedLightClassNames.length)\n                    htmlEl.classList.remove(...sanitizedLightClassNames);\n                if (sanitizedDarkClassNames.length)\n                    htmlEl.classList.add(...sanitizedDarkClassNames);\n                htmlEl.style.colorScheme = \"dark\";\n                if (themeColorEl && $themeColors) {\n                    themeColorEl.setAttribute(\"content\", $themeColors.dark);\n                }\n            }\n        }\n        if ($disableTransitions) {\n            withoutTransition(update);\n        }\n        else {\n            update();\n        }\n        return derivedMode;\n    });\n    return {\n        subscribe,\n    };\n}\nfunction createDerivedTheme() {\n    const { subscribe } = derived([theme, disableTransitions], ([$theme, $disableTransitions]) => {\n        if (!isBrowser)\n            return undefined;\n        function update() {\n            const htmlEl = document.documentElement;\n            htmlEl.setAttribute(\"data-theme\", $theme);\n        }\n        if ($disableTransitions) {\n            withoutTransition(update);\n        }\n        else {\n            update();\n        }\n        return $theme;\n    });\n    return {\n        subscribe,\n    };\n}\nexport function isValidMode(value) {\n    if (typeof value !== \"string\")\n        return false;\n    return modes.includes(value);\n}\n"],"names":["get","derivedMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}